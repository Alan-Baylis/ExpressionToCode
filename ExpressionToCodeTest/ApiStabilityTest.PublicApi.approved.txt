interface ICodeAnnotator
    string inst.AnnotateExpressionTree(ExpressionToCodeConfiguration config, Expression expr, string msg, bool hideOutermostValue)

interface IExpressionCompiler
    Func<T> inst.Compile<T>(Expression<Func<T>> expression)

interface IExpressionToCode
    string inst.ToCode(Expression e)

interface IObjectStringifier
    string inst.PlainObjectToCode(object val, Type type)
    string inst.TypeNameToCode(Type type)

class CodeAnnotators
    static readonly ICodeAnnotator ValuesOnStalksCodeAnnotator
    static readonly ICodeAnnotator SubExpressionPerLineCodeAnnotator

class ExpressionToCode
    string TYPE.ToCode<T, T1, T2, T3>(Expression<Func<T, T1, T2, T3>> e)
    string TYPE.ToCode<T, T1, T2>(Expression<Func<T, T1, T2>> e)
    string TYPE.ToCode<T, T1>(Expression<Func<T, T1>> e)
    string TYPE.ToCode<T>(Expression<Func<T>> e)
    string TYPE.ToCode(Expression e)
    string TYPE.AnnotatedToCode<T, T1, T2, T3>(Expression<Func<T, T1, T2, T3>> e)
    string TYPE.AnnotatedToCode<T, T1, T2>(Expression<Func<T, T1, T2>> e)
    string TYPE.AnnotatedToCode<T, T1>(Expression<Func<T, T1>> e)
    string TYPE.AnnotatedToCode<T>(Expression<Func<T>> e)
    string TYPE.AnnotatedToCode(Expression expr)

class ExpressionToCodeConfiguration
    readonly ExpressionToCodeConfigurationValue Value
    static readonly ExpressionToCodeConfiguration DefaultConfiguration
    static ExpressionToCodeConfiguration CurrentConfiguration
    ExpressionToCodeConfiguration inst.WithCompiler(IExpressionCompiler compiler)
    ExpressionToCodeConfiguration inst.WithAnnotator(ICodeAnnotator annotator)
    ExpressionToCodeConfiguration inst.WithObjectStringifier(IObjectStringifier objectStringifier)
    ExpressionToCodeConfiguration inst.WithAlwaysUseExplicitTypeArguments(bool alwaysUseExplicitTypeArguments)

struct ExpressionToCodeConfigurationValue : ValueType
    ICodeAnnotator CodeAnnotator
    IExpressionCompiler ExpressionCompiler
    IObjectStringifier ObjectStringifier
    bool AlwaysUseExplicitTypeArguments

class ExpressionToCodeExtensions
    string TYPE.ToCode<T, T1, T2, T3>(IExpressionToCode it, Expression<Func<T, T1, T2, T3>> e)
    string TYPE.ToCode<T, T1, T2>(IExpressionToCode it, Expression<Func<T, T1, T2>> e)
    string TYPE.ToCode<T, T1>(IExpressionToCode it, Expression<Func<T, T1>> e)
    string TYPE.ToCode<T>(IExpressionToCode it, Expression<Func<T>> e)

class ExpressionTreeAssertion
    void TYPE.Assert(ExpressionToCodeConfiguration config, Expression<Func<bool>> assertion, string msg)

class ExpressionTreeCompilers
    static readonly IExpressionCompiler DefaultExpressionCompiler
    static readonly IExpressionCompiler OptimizedExpressionCompiler

class UnitTestingInternalsAccess
    Exception TYPE.CreateException(string msg)

class ObjectToCode
    string TYPE.ComplexObjectToPseudoCode(object val, int indent)
    string TYPE.PlainObjectToCode(object val)
    string TYPE.PlainObjectToCode(object val, Type type)
    string TYPE.GetCSharpFriendlyTypeName(Type type)

class PAssert
    void TYPE.IsTrue(Expression<Func<bool>> assertion)
    void TYPE.That(Expression<Func<bool>> assertion, string msg)

