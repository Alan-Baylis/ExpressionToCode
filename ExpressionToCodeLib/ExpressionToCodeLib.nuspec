<?xml version="1.0"?>
<package >
	<metadata>
		<id>$id$</id>
		<version>$version$</version>
		<title>$title$</title>
		<authors>$author$</authors>
		<owners>$author$</owners>
		<licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
		<projectUrl>https://github.com/EamonNerbonne/ExpressionToCode</projectUrl>
		<!--<iconUrl>http://ICON_URL_HERE_OR_DELETE_THIS_LINE</iconUrl>-->
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<summary>$description$</summary>
		<description>
			Generates valid, readable C# from an expression tree, and can annotate that code with runtime values. This can
      be useful for code generation and for unit testing: ExpressionToCode detects NUnit, xUnit.NET and MSTest and
      uses their assertions if available, and a normal Exception otherwise (so it runs fine outside those specific unit 
      testing frameworks too).

			ExpressionToCode was inspired by Power Asssert.NET. It differs from PowerAssert.NET by supporting a much larger
      portion of the lambda syntax and to respect C#'s normal operator precedence, in addition to general polish.
		</description>
    <releaseNotes>Added experimental API in the Unstable_v2_Api namespace; jagged arrays with varying rank now work correctly; in some simple cases explicit generic type arguments are generated when necessary (issue #13); arrays of delegates now work.</releaseNotes>
		<copyright>Copyright 2015 Â© Eamon Nerbonne</copyright>
		<tags>code-generation NUnit xUnit.NET mstest expression-tree unit-test PowerAssert ExpressionToCode</tags>
	</metadata>
</package>